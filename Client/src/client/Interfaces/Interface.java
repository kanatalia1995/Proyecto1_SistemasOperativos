/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.Interfaces;

import static client.Connection.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.ImageIcon;
import javafx.embed.swing.JFXPanel;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaPlayer.Status;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author edisson
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    boolean pause, playing = false;
    MediaPlayer player;
    Media pick;
    float prev_volume = -1;
    Color light_gray_1 = new Color(58,58,58);
    Color light_gray_2 = new Color(68,68,68);
    
    
    public Interface() {
        initComponents();
        ConfigWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_song_info = new javax.swing.JPanel();
        lbl_song_artist_name = new javax.swing.JLabel();
        lbl_song_name = new javax.swing.JLabel();
        lbl_song_cover = new javax.swing.JLabel();
        pnl_song_playing = new javax.swing.JPanel();
        btn_prev = new javax.swing.JButton();
        btn_play = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        prg_time = new javax.swing.JProgressBar();
        pnl_panels = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnl_panels_allSongs = new javax.swing.JPanel();
        pnl_panels_myPlaylist = new javax.swing.JPanel();
        pnl_panels_account = new javax.swing.JPanel();
        btn_connect = new javax.swing.JButton();
        btn_load = new javax.swing.JButton();
        lbl_load = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_mute = new javax.swing.JButton();
        sld_volume = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 2147483647));
        setMinimumSize(new java.awt.Dimension(1200, 0));
        setPreferredSize(new java.awt.Dimension(1200, 698));
        setResizable(false);

        pnl_song_info.setMaximumSize(new java.awt.Dimension(32767, 100));
        pnl_song_info.setPreferredSize(new java.awt.Dimension(350, 100));

        lbl_song_artist_name.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lbl_song_artist_name.setForeground(new java.awt.Color(100, 98, 98));
        lbl_song_artist_name.setText("Single Singer");

        lbl_song_name.setText("Without nothing");

        javax.swing.GroupLayout pnl_song_infoLayout = new javax.swing.GroupLayout(pnl_song_info);
        pnl_song_info.setLayout(pnl_song_infoLayout);
        pnl_song_infoLayout.setHorizontalGroup(
            pnl_song_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_song_infoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_song_cover, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_song_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_song_name, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                    .addComponent(lbl_song_artist_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_song_infoLayout.setVerticalGroup(
            pnl_song_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_song_infoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lbl_song_name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_song_artist_name, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 37, Short.MAX_VALUE))
            .addComponent(lbl_song_cover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnl_song_playing.setMaximumSize(new java.awt.Dimension(32767, 100));
        pnl_song_playing.setPreferredSize(new java.awt.Dimension(350, 100));

        btn_prev.setText("⏮");
        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });

        btn_play.setText("⏸");
        btn_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_playActionPerformed(evt);
            }
        });

        btn_next.setText("⏭");

        prg_time.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                prg_timeComponentShown(evt);
            }
        });

        javax.swing.GroupLayout pnl_song_playingLayout = new javax.swing.GroupLayout(pnl_song_playing);
        pnl_song_playing.setLayout(pnl_song_playingLayout);
        pnl_song_playingLayout.setHorizontalGroup(
            pnl_song_playingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_song_playingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prg_time, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_song_playingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_prev)
                .addGap(18, 18, 18)
                .addComponent(btn_play)
                .addGap(18, 18, 18)
                .addComponent(btn_next)
                .addGap(165, 165, 165))
        );
        pnl_song_playingLayout.setVerticalGroup(
            pnl_song_playingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_song_playingLayout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addGroup(pnl_song_playingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_play)
                    .addComponent(btn_prev)
                    .addComponent(btn_next))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prg_time, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        pnl_panels_allSongs.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 0, true));

        javax.swing.GroupLayout pnl_panels_allSongsLayout = new javax.swing.GroupLayout(pnl_panels_allSongs);
        pnl_panels_allSongs.setLayout(pnl_panels_allSongsLayout);
        pnl_panels_allSongsLayout.setHorizontalGroup(
            pnl_panels_allSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1107, Short.MAX_VALUE)
        );
        pnl_panels_allSongsLayout.setVerticalGroup(
            pnl_panels_allSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 584, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Songs", pnl_panels_allSongs);

        pnl_panels_myPlaylist.setBorder(null);

        javax.swing.GroupLayout pnl_panels_myPlaylistLayout = new javax.swing.GroupLayout(pnl_panels_myPlaylist);
        pnl_panels_myPlaylist.setLayout(pnl_panels_myPlaylistLayout);
        pnl_panels_myPlaylistLayout.setHorizontalGroup(
            pnl_panels_myPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1107, Short.MAX_VALUE)
        );
        pnl_panels_myPlaylistLayout.setVerticalGroup(
            pnl_panels_myPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 584, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("My list", pnl_panels_myPlaylist);

        btn_connect.setText("Connect to server");
        btn_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_connectActionPerformed(evt);
            }
        });

        btn_load.setText("Load song");
        btn_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_panels_accountLayout = new javax.swing.GroupLayout(pnl_panels_account);
        pnl_panels_account.setLayout(pnl_panels_accountLayout);
        pnl_panels_accountLayout.setHorizontalGroup(
            pnl_panels_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_panels_accountLayout.createSequentialGroup()
                .addGroup(pnl_panels_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_panels_accountLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(btn_load))
                    .addGroup(pnl_panels_accountLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(btn_connect))
                    .addGroup(pnl_panels_accountLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(lbl_load, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(810, Short.MAX_VALUE))
        );
        pnl_panels_accountLayout.setVerticalGroup(
            pnl_panels_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_panels_accountLayout.createSequentialGroup()
                .addContainerGap(303, Short.MAX_VALUE)
                .addComponent(btn_load)
                .addGap(34, 34, 34)
                .addComponent(btn_connect)
                .addGap(31, 31, 31)
                .addComponent(lbl_load, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );

        jTabbedPane1.addTab("Account", pnl_panels_account);

        javax.swing.GroupLayout pnl_panelsLayout = new javax.swing.GroupLayout(pnl_panels);
        pnl_panels.setLayout(pnl_panelsLayout);
        pnl_panelsLayout.setHorizontalGroup(
            pnl_panelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_panelsLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_panelsLayout.setVerticalGroup(
            pnl_panelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        btn_mute.setText("🔊");
        btn_mute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_muteActionPerformed(evt);
            }
        });

        sld_volume.setFont(new java.awt.Font("Ubuntu", 0, 3)); // NOI18N
        sld_volume.setMaximum(10);
        sld_volume.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sld_volumeStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(174, Short.MAX_VALUE)
                .addComponent(btn_mute)
                .addGap(0, 0, 0)
                .addComponent(sld_volume, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sld_volume, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_mute))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_panels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_song_info, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnl_song_playing, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnl_panels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnl_song_info, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnl_song_playing, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfigWindow() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
        int width =  (int) (dimension.getWidth());                  // Center the window
        int height = (int) (dimension.getHeight());                 // Center the window
        
        // this.setSize(width, height);
        // this.setExtendedState(MAXIMIZED_BOTH);

        //this.setSize(this.getWidth(), this.getHeight());

        // pnl_actual_playing.setLocation(0, this.getHeight()-100);
        // pnl_actual_playing.setSize(width, 100);
        
        lbl_song_name.setForeground(light_gray_1);
        lbl_song_artist_name.setForeground(light_gray_2);
        
        // When a song is changed
        //String cover_path = "/home/edisson/NetBeansProjects/Client/cover.jpg";
        // String cover_path = "/home/edisson/Escritorio/cover.png";
        //ImageIcon icon = new ImageIcon(getClass().getResource(cover_path)); 
        //lbl_song_cover.setIcon(icon);
        // lbl_song_cover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home/edisson/Escritorio/cover.png")));

    }
    
    private void LoadSong(){
        JFXPanel j = new JFXPanel();
        if (playing == true) {
            player.dispose();
            playing = false;
        }
        String name_song = new File("Brillas.mp3").toURI().toString();;
        pick = new Media(name_song);
        player = new MediaPlayer(pick);
        playing = true;
        
    }
    
    
    
    
    
    private void PauseSong() {
        player.pause();
        btn_play.setLabel("▶");
        pause = true;
    }
    
    private void PlaySong() {
        player.play();
        btn_play.setLabel("⏸");
        pause = false;
    }
    
    private void RestartSong() {
        player.stop();
        if (!pause){
            PlaySong();
        }
    }
    
    private void UpdateBarTime(int progress){
        
    }
    
    public void updateProgressBar(final int j) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                System.out.println("Runnig by " + player.getTotalDuration());
//                UpdateBarTime(Math.round(player.getTotalDuration()/player.getCurrentTime()));
            }
        });            
    }
    
    private void btn_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loadActionPerformed
        // TODO add your handling code here:
        LoadSong();
        lbl_load.setText("-loaded- ");
        btn_play.setLabel("▶");
        pause = true;
    }//GEN-LAST:event_btn_loadActionPerformed

     private void AdjustIconVolume() {
        float value = getVolume();
        if (value == 0.0){
            btn_mute.setLabel("🔇");
        }else if (value < 0.2){
            btn_mute.setLabel("🔈");
        }else if (value < 0.6){
            btn_mute.setLabel("🔉");
        }else if (value <= 1){
            btn_mute.setLabel("🔊");
        }else{
            btn_mute.setLabel("XX");
        }
    }
    private void setVolume(float value) {
        player.setVolume(value);
        sld_volume.setValue((int) (value*maxVolume()));
        AdjustIconVolume();
    }
    private float getVolume() {
        return sld_volume.getValue()/maxVolume();
    }
    private float maxVolume() {
        return sld_volume.getMaximum();
    }
    private float minVolume() {
        return sld_volume.getMinimum();
    }
    private void MutePlayer() {
        float value = getVolume();
        if (value == 0.0){
            if (prev_volume < 0){
                prev_volume = minVolume();
            }
            setVolume(prev_volume);
        }else{
            prev_volume = value;
            setVolume(minVolume());
        }
    }
    private void btn_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_connectActionPerformed
        // TODO add your handling code here:
        try{
            if (ConnectToServer()){
                btn_connect.setLabel("Connected");
            }else{
                btn_connect.setLabel("Error");
            }
        }catch (Exception e){
            
        }
        
    }//GEN-LAST:event_btn_connectActionPerformed

    private void prg_timeComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_prg_timeComponentShown
        // TODO add your handling code here:
        System.out.println("Estoy corriendo");
    }//GEN-LAST:event_prg_timeComponentShown

    private void btn_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_playActionPerformed
        // TODO add your handling code here:
        if (pause == true){
            PlaySong();
        }else{
            PauseSong();
        }

        //JOptionPane.showMessageDialog(rootPane, name_song);
    }//GEN-LAST:event_btn_playActionPerformed

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        // TODO add your handling code here:
        RestartSong();
    }//GEN-LAST:event_btn_prevActionPerformed

    private void btn_muteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_muteActionPerformed
        // TODO add your handling code here:
        MutePlayer();
    }//GEN-LAST:event_btn_muteActionPerformed

    private void sld_volumeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sld_volumeStateChanged
        // TODO add your handling code here:
        setVolume(getVolume());
    }//GEN-LAST:event_sld_volumeStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        new SwingBackgroupWorker().execute();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
                
            }
        });
    }
    
    
    
    public static class SwingBackgroupWorker extends SwingWorker<Object, Object> {
        @Override
        protected Object doInBackground() throws Exception {
            while (true) {
                System.out.println("working");
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        System.out.println("executed");
                        // here the swing update
                    }
                });
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_connect;
    private javax.swing.JButton btn_load;
    private javax.swing.JButton btn_mute;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_play;
    private javax.swing.JButton btn_prev;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_load;
    private javax.swing.JLabel lbl_song_artist_name;
    private javax.swing.JLabel lbl_song_cover;
    private javax.swing.JLabel lbl_song_name;
    private javax.swing.JPanel pnl_panels;
    private javax.swing.JPanel pnl_panels_account;
    private javax.swing.JPanel pnl_panels_allSongs;
    private javax.swing.JPanel pnl_panels_myPlaylist;
    private javax.swing.JPanel pnl_song_info;
    private javax.swing.JPanel pnl_song_playing;
    private javax.swing.JProgressBar prg_time;
    private javax.swing.JSlider sld_volume;
    // End of variables declaration//GEN-END:variables
}
